{"version":3,"sources":["views/Counter/index.js","containers/CounterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","count","Button","variant","color","onClick","handleIncrement","handleDecrement","handleReset","CounterContainer","state","bind","this","setState","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA2BeA,EArBC,SAACC,GAAD,OAEZ,gCAEF,6BAAK,kBAAoBA,EAAMC,QAC3B,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAAUL,EAAMM,gBAA3D,uBAIA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,YAAYC,QAAUL,EAAMO,gBAA7D,uBAGA,cAACL,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAAUL,EAAMQ,YAA3D,uBCqCSC,E,kDAjDX,WAAYT,GAAO,IAAD,8BACd,cAAMA,IAEDU,MAAQ,CAACT,MAAO,GAEpB,EAAKK,gBAAkB,EAAKA,gBAAgBK,KAArB,gBACvB,EAAKJ,gBAAkB,EAAKA,gBAAgBI,KAArB,gBACvB,EAAKH,YAAc,EAAKA,YAAYG,KAAjB,gBAPN,E,mDAUlB,WAAoB,IAAD,OACfC,KAAKC,UAAS,SAACH,GAAD,MAAW,CACrBT,MAAO,EAAKS,MAAMT,MAAQ,Q,6BAGlC,WAAmB,IAAD,OACdW,KAAKC,UAAS,SAACH,GAAD,MAAW,CACrBT,MAAO,EAAKS,MAAMT,MAAQ,Q,yBAGlC,WACIW,KAAKC,UAAS,SAACH,GAAD,MAAW,CACrBT,MAAO,Q,oBAIf,WAEI,IAAMD,EAAO,CACTM,gBAAiBM,KAAKN,gBACtBL,MAAOW,KAAKF,MAAMT,MAClBM,gBAAiBK,KAAKL,gBACtBC,YAAaI,KAAKJ,aAIxB,OACI,cAAC,EAAD,eAAaR,Q,GAtCSc,IAAMC,WCSvBC,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25baf05d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter = (props) =>(\r\n\r\n    <div >\r\n\r\n  <h1>{\"Current count  \" + props.count}</h1>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick ={props.handleIncrement}>\r\n        Increment\r\n\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick ={props.handleDecrement}>\r\n       Decrement\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"default\" onClick ={props.handleReset}>\r\n       Reset\r\n      </Button>\r\n      \r\n     \r\n    </div>\r\n  );\r\n\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Counter from '../views/Counter/index';\r\n\r\n\r\nclass CounterContainer  extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {count: 0}\r\n  \r\n         this.handleIncrement = this.handleIncrement.bind(this) \r\n         this.handleDecrement = this.handleDecrement.bind(this) \r\n         this.handleReset = this.handleReset.bind(this) \r\n    }\r\n   \r\n    handleIncrement () {\r\n        this.setState((state) =>({\r\n            count: this.state.count + 1,\r\n        }))\r\n    }\r\n    handleDecrement (){\r\n        this.setState((state) =>({\r\n            count: this.state.count - 1,\r\n        }))\r\n    }\r\n    handleReset (){\r\n        this.setState((state) =>({\r\n            count: 0 ,\r\n        }))\r\n    }\r\n \r\n    render(){\r\n\r\n        const props ={\r\n            handleIncrement: this.handleIncrement,\r\n            count: this.state.count,\r\n            handleDecrement: this.handleDecrement,\r\n            handleReset: this.handleReset,\r\n\r\n        }\r\n \r\n      return(\r\n          <Counter {...props}/>\r\n      )  \r\n    \r\n      }\r\n    }\r\nCounterContainer.propTypes ={\r\n    handleIncrement: PropTypes.func,\r\n    count: PropTypes.number,\r\n    handleDecrement: PropTypes.func,\r\n    handleReset: PropTypes.func,\r\n} \r\n\r\nexport default CounterContainer;","import './App.css';\nimport CounterContainer from './containers/CounterContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>My counter</h1>\n      <CounterContainer  />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}